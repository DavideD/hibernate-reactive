description = 'Hibernate Reactive Example'

dependencies {
    implementation project(':hibernate-reactive-core')

    // Hibernate Validator (optional)
    implementation 'org.hibernate.validator:hibernate-validator:6.1.5.Final'
    runtimeOnly 'org.glassfish:jakarta.el:3.0.3'

    // JPA metamodel generation for criteria queries (optional)
    annotationProcessor "org.hibernate:hibernate-jpamodelgen:${hibernateOrmVersion}"

    // database drivers for PostgreSQL and MySQL
    runtimeOnly 'io.vertx:vertx-pg-client:3.9.1'
    runtimeOnly 'io.vertx:vertx-mysql-client:3.9.1'

    // logging (optional)
    runtimeOnly 'org.slf4j:slf4j-log4j12:1.7.30'
}

// All of the remaining configuration is only necessary to enable
// the Hibernate bytecode enhancer and field-level lazy fetching.
// (This is very optional!)

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.hibernate:hibernate-gradle-plugin:${hibernateOrmVersion}"
    }
}

apply plugin: 'org.hibernate.orm'

hibernate {
    enhance {
        enableLazyInitialization = true
        enableDirtyTracking = true
        enableAssociationManagement = false
    }
}

// The following tasks run the example with
// the different API available.
//
// They require the selected db ready
// to accept connections.
task runMainCompletionStage( type: JavaExec ) {
    group = "Execution"
    description = "Run example for CompletionStage API"
    classpath = sourceSets.main.runtimeClasspath
    main = "org.hibernate.example.reactive.Main"
}

task runMainMutiny( type: JavaExec ) {
    group = "Execution"
    description = "Run example for Mutiny API"
    classpath = sourceSets.main.runtimeClasspath
    main = "org.hibernate.example.reactive.MutinyMain"
}

task runMainAll( dependsOn: ["runMainCompletionStage", "runMainMutiny"] ) {
}
